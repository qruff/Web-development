{"ast":null,"code":"import { DoctorsAddComponent } from '../doctors-add/doctors-add.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../app.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"ngx-bootstrap/modal\";\nimport * as i5 from \"@angular/forms\";\nexport class NavBarComponent {\n  constructor(router, app, http, modalService) {\n    this.router = router;\n    this.app = app;\n    this.http = http;\n    this.modalService = modalService;\n    this.credentials = {\n      username: '',\n      password: ''\n    };\n  }\n  login() {\n    console.log(\"ПЫТАЮСЬ\");\n    this.app.authenticate(this.credentials);\n    this.credentials.username = \"\";\n    this.credentials.password = \"\";\n  }\n  openModal() {\n    const modalOptions = {\n      initialState: {},\n      class: 'modal-dialog-centered'\n    };\n    this.bsModalRef = this.modalService.show(DoctorsAddComponent);\n  }\n  logout() {\n    this.app.authenticated = false;\n    this.app.authAdmin = false;\n    this.router.navigate(['/']);\n  }\n}\nNavBarComponent.ɵfac = function NavBarComponent_Factory(t) {\n  return new (t || NavBarComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AppService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.BsModalService));\n};\nNavBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavBarComponent,\n  selectors: [[\"app-nav-bar\"]],\n  decls: 22,\n  vars: 7,\n  consts: [[0, \"th\", \"fragment\", \"navi(activeTab)\", 1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-primary\", 2, \"display\", \"flex\"], [3, \"hidden\"], [\"method\", \"POST\", 3, \"sumbit\"], [1, \"input-group-prepend\"], [\"required\", \"\", \"placeholder\", \"Login\", \"name\", \"username\", \"aria-describedby\", \"inputGroup-sizing-sm\", 2, \"margin-right\", \"10px\", \"border-radius\", \"5px\", 3, \"ngModel\", \"ngModelChange\"], [\"required\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"aria-describedby\", \"inputGroup-sizing-sm\", 2, \"margin-right\", \"10px\", \"border-radius\", \"5px\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"darkblue\", 3, \"click\"], [1, \"nav-item\", 2, \"margin-right\", \"5px\", 3, \"hidden\"], [\"method\", \"POST\"], [\"type\", \"submit\", \"value\", \"Logout\", 1, \"btn\", \"btn-danger\", 2, \"margin-left\", \"auto\", 3, \"click\"], [\"routerLinkActive\", \"active-link\", 1, \"btn\", \"btn-light\", 2, \"margin-right\", \"5px\", 3, \"hidden\", \"click\"], [\"routerLink\", \"/newpatient\", \"routerLinkActive\", \"active-link\", 1, \"btn\", \"btn-light\", 2, \"margin-right\", \"5px\", 3, \"hidden\"], [\"routerLink\", \"/\", \"routerLinkActive\", \"active-link\", 1, \"btn\", \"btn-light\", 2, \"margin-right\", \"5px\"], [\"routerLink\", \"/patients\", \"routerLinkActive\", \"active-link\", 1, \"btn\", \"btn-light\", 2, \"margin-right\", \"5px\"], [\"routerLink\", \"/priems\", \"routerLinkActive\", \"active-link\", 1, \"btn\", \"btn-light\"]],\n  template: function NavBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"sumbit\", function NavBarComponent_Template_form_sumbit_2_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function NavBarComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.credentials.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function NavBarComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.credentials.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function NavBarComponent_Template_button_click_6_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(7, \"\\u0412\\u043E\\u0439\\u0442\\u0438\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8)(10, \"input\", 9);\n      i0.ɵɵlistener(\"click\", function NavBarComponent_Template_input_click_10_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"a\", 10);\n      i0.ɵɵlistener(\"click\", function NavBarComponent_Template_a_click_12_listener() {\n        return ctx.openModal();\n      });\n      i0.ɵɵtext(13, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u0432\\u0440\\u0430\\u0447\\u0430\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 11);\n      i0.ɵɵtext(15, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u0446\\u0438\\u0435\\u043D\\u0442\\u0430\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"a\", 12);\n      i0.ɵɵtext(17, \"\\u0412\\u0440\\u0430\\u0447\\u0438\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"a\", 13);\n      i0.ɵɵtext(19, \"\\u0412\\u0441\\u0435 \\u043F\\u0430\\u0446\\u0438\\u0435\\u043D\\u0442\\u044B\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"a\", 14);\n      i0.ɵɵtext(21, \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u043F\\u0440\\u0438\\u0435\\u043C\\u043E\\u0432\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", ctx.app.authenticated);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.credentials.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hidden\", !ctx.app.authenticated);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hidden\", !ctx.app.authenticated);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", !ctx.app.authAdmin);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.app.authAdmin);\n    }\n  },\n  dependencies: [i1.RouterLink, i1.RouterLinkActive, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,mBAAmB,QAAQ,sCAAsC;;;;;;;AAO1E,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,MAAc,EAAQC,GAAe,EAAUC,IAAgB,EAAUC,YAA4B;IAArG,WAAM,GAANH,MAAM;IAAgB,QAAG,GAAHC,GAAG;IAAsB,SAAI,GAAJC,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAFzG,gBAAW,GAAG;MAACC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAC;EAG1C;EACAC,KAAK;IACHC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAErB,IAAI,CAACP,GAAG,CAACQ,YAAY,CAAC,IAAI,CAACC,WAAW,CAAC;IACvC,IAAI,CAACA,WAAW,CAACN,QAAQ,GAAG,EAAE;IAC9B,IAAI,CAACM,WAAW,CAACL,QAAQ,GAAG,EAAE;EACjC;EACAM,SAAS;IACP,MAAMC,YAAY,GAAiB;MACjCC,YAAY,EAAC,EAAE;MACfC,KAAK,EAAE;KACR;IACD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACZ,YAAY,CAACa,IAAI,CAACnB,mBAAmB,CAAC;EAC/D;EACAoB,MAAM;IACJ,IAAI,CAAChB,GAAG,CAACiB,aAAa,GAAG,KAAK;IAC9B,IAAI,CAACjB,GAAG,CAACkB,SAAS,GAAG,KAAK;IAC1B,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;;AAvBWtB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5BC,8BAAiH;MAEnGA;QAAA,OAAUC,WAAO;MAAA,EAAC;MACpBD,8BAAiC;MACwBA;QAAA;MAAA,EAAkC;MAAvFA,iBAAiL;MACjLA,gCAAoM;MAA7IA;QAAA;MAAA,EAAkC;MAAzFA,iBAAoM;MACpMA,iCAAqG;MAA/EA;QAAA,OAASC,WAAO;MAAA,EAAC;MAA8DD,8CAAK;MAAAA,iBAAS;MAI/HA,8BAAqF;MAE5CA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAAnDD,iBAAyG;MAInHA,+BAA0C;MAC2EA;QAAA,OAASC,eAAW;MAAA,EAAC;MAAED,qIAAqB;MAAAA,iBAAI;MACnKA,8BAA4I;MAAAA,kHAAiB;MAAAA,iBAAI;MACjKA,8BAAkG;MAAAA,+CAAK;MAAAA,iBAAI;MAC3GA,8BAA0G;MAAAA,oFAAY;MAAAA,iBAAI;MAC1HA,8BAA6E;MAAAA,sGAAe;MAAAA,iBAAI;;;MApB3FA,eAAiC;MAAjCA,8CAAiC;MAG2BA,eAAkC;MAAlCA,kDAAkC;MAChCA,eAAkC;MAAlCA,kDAAkC;MAKhGA,eAAkC;MAAlCA,+CAAkC;MAMnCA,eAAkC;MAAlCA,+CAAkC;MAClCA,eAA8B;MAA9BA,2CAA8B;MAC9BA,eAA8B;MAA9BA,2CAA8B","names":["DoctorsAddComponent","NavBarComponent","constructor","router","app","http","modalService","username","password","login","console","log","authenticate","credentials","openModal","modalOptions","initialState","class","bsModalRef","show","logout","authenticated","authAdmin","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["I:\\Универ\\2курс\\2семестр\\Web-программирование\\other\\WEB-dev-lab6\\WEB-dev-lab6\\lab6\\src\\app\\nav-bar\\nav-bar.component.ts","I:\\Универ\\2курс\\2семестр\\Web-программирование\\other\\WEB-dev-lab6\\WEB-dev-lab6\\lab6\\src\\app\\nav-bar\\nav-bar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { Router } from '@angular/router';\nimport { DoctorsAddComponent } from '../doctors-add/doctors-add.component';\nimport { BsModalService, BsModalRef, ModalOptions} from 'ngx-bootstrap/modal';\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent {\n  credentials = {username: '', password: ''};\n  bsModalRef?: BsModalRef;\n  constructor(private router: Router,public app: AppService, private http: HttpClient, private modalService: BsModalService) {\n  }\n  login(){\n    console.log(\"ПЫТАЮСЬ\");\n\n     this.app.authenticate(this.credentials);\n     this.credentials.username = \"\";\n     this.credentials.password = \"\";\n  }\n  openModal(){\n    const modalOptions: ModalOptions = {\n      initialState:{},\n      class: 'modal-dialog-centered'\n    }\n    this.bsModalRef = this.modalService.show(DoctorsAddComponent);\n  }\n  logout(){\n    this.app.authenticated = false;\n    this.app.authAdmin = false;\n    this.router.navigate(['/']);\n  }\n}\n","<div style=\"display: flex\" class=\"navbar navbar-expand-lg navbar-dark bg-primary \" th:fragment=\"navi(activeTab)\">\n    <div [hidden]=\"this.app.authenticated\" >\n        <form (sumbit)=\"login()\" method=\"POST\">\n            <div class=\"input-group-prepend\">\n                <input required placeholder=\"Login\" name=\"username\"  [(ngModel)]=\"credentials.username\"  aria-describedby=\"inputGroup-sizing-sm\" style=\"margin-right: 10px; border-radius: 5px;\">\n                <input required type=\"password\" placeholder=\"Password\" [(ngModel)]=\"credentials.password\" name=\"password\" aria-describedby=\"inputGroup-sizing-sm\"  style=\"margin-right: 10px ; border-radius: 5px;\">\n                <button type=\"submit\" (click)=\"login()\"  class=\"btn btn-primary\" style=\"background-color: darkblue\" >Войти</button>\n            </div>\n        </form>\n    </div>\n    <div [hidden]=\"!this.app.authenticated\"  class=\"nav-item\" style=\"margin-right: 5px;\">\n        <form  method=\"POST\">\n            <input style=\"margin-left:auto;\" (click)=\"logout()\" type=\"submit\" class=\"btn btn-danger\" value=\"Logout\"/>\n        </form>\n    </div>\n  \n  <div  [hidden]=\"!this.app.authenticated\" >\n    <a  [hidden]=\"!this.app.authAdmin\" routerLinkActive=\"active-link\" style=\"margin-right: 5px;\" class=\"btn btn-light\" (click)=\"openModal()\" >Добавить нового врача</a>\n    <a  [hidden]=\"!this.app.authAdmin\" routerLink=\"/newpatient\" routerLinkActive=\"active-link\" style=\"margin-right: 5px;\" class=\"btn btn-light\">Добавить пациента</a>\n    <a routerLink=\"/\" routerLinkActive=\"active-link\" style=\"margin-right: 5px;\" class=\"btn btn-light\">Врачи</a>\n    <a routerLink=\"/patients\" routerLinkActive=\"active-link\" style=\"margin-right: 5px;\" class=\"btn btn-light\">Все пациенты</a>\n    <a routerLink=\"/priems\" routerLinkActive=\"active-link\" class=\"btn btn-light\">История приемов</a>\n  </div>\n\n  \n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}