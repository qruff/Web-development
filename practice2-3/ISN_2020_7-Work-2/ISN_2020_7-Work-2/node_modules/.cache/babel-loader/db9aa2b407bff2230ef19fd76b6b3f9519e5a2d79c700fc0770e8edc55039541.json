{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVToolbarTitleProps = propsFactory({\n  text: String,\n  ...makeTagProps()\n}, 'v-toolbar-title');\nexport const VToolbarTitle = genericComponent()({\n  name: 'VToolbarTitle',\n  props: makeVToolbarTitleProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      var _slots$default;\n      const hasText = !!(slots.default || slots.text || props.text);\n      return _createVNode(props.tag, {\n        \"class\": \"v-toolbar-title\"\n      }, {\n        default: () => [hasText && _createVNode(\"div\", {\n          \"class\": \"v-toolbar-title__placeholder\"\n        }, [slots.text ? slots.text() : props.text, (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)])]\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":";AAAA;AAAA,SACSA,YAAY,qCAErB;AAAA,SACSC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,gCAElD;AAGA,OAAO,MAAMC,sBAAsB,GAAGF,YAAY,CAAC;EACjDG,IAAI,EAAEC,MAAM;EAEZ,GAAGN,YAAY;AACjB,CAAC,EAAE,iBAAiB,CAAC;AAErB,OAAO,MAAMO,aAAa,GAAGN,gBAAgB,EAKzC,CAAC;EACHO,IAAI,EAAE,eAAe;EAErBC,KAAK,EAAEL,sBAAsB,EAAE;EAE/BM,KAAK,CAAED,KAAK,QAAa;IAAA,IAAX;MAAEE;IAAM,CAAC;IACrBR,SAAS,CAAC,MAAM;MAAA;MACd,MAAMS,OAAO,GAAG,CAAC,EAAED,KAAK,CAACE,OAAO,IAAIF,KAAK,CAACN,IAAI,IAAII,KAAK,CAACJ,IAAI,CAAC;MAE7D;QAAA,SACmB;MAAiB;QAAAQ,gBAC9BD,OAAO;UAAA,SACI;QAA8B,IACrCD,KAAK,CAACN,IAAI,GAAGM,KAAK,CAACN,IAAI,EAAE,GAAGI,KAAK,CAACJ,IAAI,oBAEtCM,KAAK,CAACE,OAAO,qBAAbC,yBAAK,CAAY,EAEtB;MAAA;IAGP,CAAC,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC","names":["makeTagProps","genericComponent","propsFactory","useRender","makeVToolbarTitleProps","text","String","VToolbarTitle","name","props","setup","slots","hasText","default","_slots$default"],"sources":["../../../src/components/VToolbar/VToolbarTitle.tsx"],"sourcesContent":["// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { SlotsToProps } from '@/util'\n\nexport const makeVToolbarTitleProps = propsFactory({\n  text: String,\n\n  ...makeTagProps(),\n}, 'v-toolbar-title')\n\nexport const VToolbarTitle = genericComponent<new () => {\n  $props: SlotsToProps<{\n    default: []\n    text: []\n  }>\n}>()({\n  name: 'VToolbarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasText = !!(slots.default || slots.text || props.text)\n\n      return (\n        <props.tag class=\"v-toolbar-title\">\n          { hasText && (\n            <div class=\"v-toolbar-title__placeholder\">\n              { slots.text ? slots.text() : props.text }\n\n              { slots.default?.() }\n            </div>\n          ) }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VToolbarTitle = InstanceType<typeof VToolbarTitle>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}